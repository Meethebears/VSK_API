using REPO.Models;
using REPO.Controllers;
using System.Web.Http;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Globalization;

namespace API.Controllers
{
    public class HrController : ApiController
    {
        #region Hr_Job_Get
        [Route("api/Hr_Job_Get")]
        [HttpGet]
        public ResponseModel Hr_Job_Get([FromUri] JobModel JobModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<JobModel> Hr_Job_Get = HrRepository.Hr_Job_Get(JobModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Job_Get;
                _ResponseModel.length = Hr_Job_Get.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Employee_Detail
        [Route("api/Hr_Employee_Detail")]
        [HttpGet]
        public ResponseModel Hr_Employee_Detail([FromUri] DetailModel DetailModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<DetailModel> Hr_Employee_Detail = HrRepository.Hr_Employee_Detail(DetailModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Employee_Detail;
                _ResponseModel.length = Hr_Employee_Detail.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Employee_Time
        [Route("api/Hr_Employee_Time")]
        [HttpGet]
        public ResponseModel Hr_Employee_Time([FromUri] DetailModel DetailModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<DetailModel> Hr_Employee_Time = HrRepository.Hr_Employee_Time(DetailModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Employee_Time;
                _ResponseModel.length = Hr_Employee_Time.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Quarter_Get
        [Route("api/Hr_Quarter_Get")]
        [HttpGet]
        public ResponseModel Hr_Quarter_Get([FromUri] QuarterModel QuarterModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<QuarterModel> Hr_Quarter_Get = HrRepository.Hr_Quarter_Get(QuarterModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Quarter_Get;
                _ResponseModel.length = Hr_Quarter_Get.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Quarter_Create
        [Route("api/Hr_Quarter_Create")]
        [HttpPost]
        public ResponseModel Hr_Quarter_Create([FromBody] QuarterModel QuarterModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<QuarterModel> Hr_Quarter_Create = HrRepository.Hr_Quarter_Create(QuarterModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Quarter_Create;
                _ResponseModel.length = Hr_Quarter_Create.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Quarter_Update
        [Route("api/Hr_Quarter_Update")]
        [HttpPost]
        public ResponseModel Hr_Quarter_Update([FromBody] QuarterModel QuarterModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<QuarterModel> Hr_Quarter_Update = HrRepository.Hr_Quarter_Update(QuarterModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Quarter_Update;
                _ResponseModel.length = Hr_Quarter_Update.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Create_Data
        [Route("api/Hr_Create_Data")]
        [HttpPost]
        public ResponseModel Hr_Create_Data([FromBody] CreateDATAModel CreateDATAModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<CreateDATAModel> Hr_Create_Data = HrRepository.Hr_Create_Data(CreateDATAModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Create_Data;
                _ResponseModel.length = Hr_Create_Data.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Create_Score
        [Route("api/Hr_Create_Score")]
        [HttpPost]
        public ResponseModel Hr_Create_Score(List<ScoreCreateModel> ScoreCreateModel)
        {
            try
            {
                HrRepository HrRepository = new HrRepository();

                //HrRepository.TRP_TMS_Sync_Delete();

                List<ScoreCreateModel> HR_ScoreModelList = new List<ScoreCreateModel>();

                foreach (var HR_SCOREItem in ScoreCreateModel)
                {
                    ScoreCreateModel HR_SCOREModel_data = new ScoreCreateModel();

                    HR_SCOREModel_data.sc_data_id = HR_SCOREItem.sc_data_id;
                    HR_SCOREModel_data.sc_topic = HR_SCOREItem.sc_topic;
                    HR_SCOREModel_data.sc_weight = HR_SCOREItem.sc_weight;
                    HR_SCOREModel_data.sc_score = HR_SCOREItem.sc_score;
                    HR_SCOREModel_data.sc_comment = HR_SCOREItem.sc_comment;
                    HR_SCOREModel_data.sc_order = HR_SCOREItem.sc_order;
                    HR_SCOREModel_data.created_by = HR_SCOREItem.created_by;


                    HR_ScoreModelList.Add(HR_SCOREModel_data);

                }

                HrRepository.Hr_Create_Score(HR_ScoreModelList);

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Success";

                return _ResponseModel;
            }
            catch (Exception ex)
            {
                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Employee_Create
        [Route("api/Hr_Employee_Create")]
        [HttpPost]
        public ResponseModel Hr_Employee_Create([FromBody] EmployeeModel EmployeeModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<EmployeeModel> Hr_Employee_Create = HrRepository.Hr_Employee_Create(EmployeeModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Employee_Create;
                _ResponseModel.length = Hr_Employee_Create.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Employee_Update
        [Route("api/Hr_Employee_Update")]
        [HttpPost]
        public ResponseModel Hr_Employee_Update([FromBody] EmployeeModel EmployeeModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<EmployeeModel> Hr_Employee_Update = HrRepository.Hr_Employee_Update(EmployeeModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Employee_Update;
                _ResponseModel.length = Hr_Employee_Update.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Employee_Get
        [Route("api/Hr_Employee_Get")]
        [HttpGet]
        public ResponseModel Hr_Employee_Get([FromUri] EmployeeModel EmployeeModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<EmployeeModel> Hr_Employee_Get = HrRepository.Hr_Employee_Get(EmployeeModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Employee_Get;
                _ResponseModel.length = Hr_Employee_Get.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Employee_Delete
        [Route("api/Hr_Employee_Delete")]
        [HttpPost]
        public ResponseModel Hr_Employee_Delete([FromBody] EmployeeModel EmployeeModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<EmployeeModel> Hr_Employee_Delete = HrRepository.Hr_Employee_Delete(EmployeeModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Employee_Delete;
                _ResponseModel.length = Hr_Employee_Delete.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Time_Get
        [Route("api/Hr_Time_Get")]
        [HttpGet]
        public ResponseModel Hr_Time_Get([FromUri] TimeModel TimeModel)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<TimeModel> Hr_Time_Get = HrRepository.Hr_Time_Get(TimeModel);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Time_Get;
                _ResponseModel.length = Hr_Time_Get.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        #region Hr_Time_Create
        [Route("api/Hr_Time_Create")]
        [HttpPost]
        public ResponseModel Hr_Time_Create(List<TimeModel> TimeModel)
        {
            try
            {
                HrRepository HrRepository = new HrRepository();

                //HrRepository.TRP_TMS_Sync_Delete();

                List<TimeModel> TIME_JOBModelList = new List<TimeModel>();

                foreach (var TMS_JOBItem in TimeModel)
                {
                    TimeModel TIME_JOBModel_data = new TimeModel();

                    TIME_JOBModel_data.time_employee_code = TMS_JOBItem.time_employee_code;
                    TIME_JOBModel_data.time_employee_name = TMS_JOBItem.time_employee_name;
                    TIME_JOBModel_data.time_employee_pos = TMS_JOBItem.time_employee_pos;
                    TIME_JOBModel_data.time_late_count = TMS_JOBItem.time_late_count;
                    TIME_JOBModel_data.time_late_time = TMS_JOBItem.time_late_time;
                    TIME_JOBModel_data.time_absent_count = TMS_JOBItem.time_absent_count;
                    TIME_JOBModel_data.time_absent_time = TMS_JOBItem.time_absent_time;
                    TIME_JOBModel_data.time_sick_leave = TMS_JOBItem.time_sick_leave;
                    TIME_JOBModel_data.time_personal_leave = TMS_JOBItem.time_personal_leave;
                    TIME_JOBModel_data.time_maternity_leave = TMS_JOBItem.time_maternity_leave;
                    TIME_JOBModel_data.time_ordination_leave = TMS_JOBItem.time_ordination_leave;
                    TIME_JOBModel_data.time_wage_leave = TMS_JOBItem.time_wage_leave;
                    TIME_JOBModel_data.time_funeral_wedding_leave = TMS_JOBItem.time_funeral_wedding_leave;
                    TIME_JOBModel_data.time_warning_leave = TMS_JOBItem.time_warning_leave;
                    TIME_JOBModel_data.time_probate_leave = TMS_JOBItem.time_probate_leave;
                    TIME_JOBModel_data.time_data_quarter = TMS_JOBItem.time_data_quarter;
                    TIME_JOBModel_data.created_by = TMS_JOBItem.created_by;


                    TIME_JOBModelList.Add(TIME_JOBModel_data);

                }

                HrRepository.Hr_Time_Create(TIME_JOBModelList);

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Success";

                return _ResponseModel;
            }
            catch (Exception ex)
            {
                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

        //#region Hr_Create_Score
        //[Route("api/Hr_Create_Score")]
        //[HttpPost]
        //public ResponseModel Hr_Create_Score(List<ScoreModel> ScoreModel)
        //{
        //    try
        //    {
        //        List<ScoreModel> ScoreModelList = new List<ScoreModel>();

        //        HrRepository HrRepository = new HrRepository();

        //        foreach (var CreatePMSItem in ScoreModel)
        //        {

        //            ScoreModel ScoreModel_data = new ScoreModel();
        //            ScoreModel_data.sc_data_id = CreatePMSItem.sc_data_id;
        //            ScoreModel_data.sc_answer_1 = CreatePMSItem.sc_answer_1;
        //            ScoreModel_data.sc_answer_2_1 = CreatePMSItem.sc_answer_2_1;
        //            ScoreModel_data.sc_answer_2_2 = CreatePMSItem.sc_answer_2_2;
        //            ScoreModel_data.sc_answer_2_3 = CreatePMSItem.sc_answer_2_3;
        //            ScoreModel_data.sc_answer_2_4 = CreatePMSItem.sc_answer_2_4;
        //            ScoreModel_data.sc_answer_more = CreatePMSItem.sc_answer_more;
        //            ScoreModel_data.created_by = CreatePMSItem.created_by;
        //            ScoreModelList.Add(ScoreModel_data);
        //            HrRepository.Hr_Create_Score(ScoreModel_data);
        //        }

        //        ResponseModel _ResponseModel = new ResponseModel();

        //        _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
        //        _ResponseModel.status = "Success";

        //        return _ResponseModel;

        //    }
        //    catch (Exception ex)
        //    {

        //        ResponseModel _ResponseModel = new ResponseModel();
        //        _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
        //        _ResponseModel.status = "Error";
        //        _ResponseModel.error_message = ex.Message.ToString();
        //        _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
        //        _ResponseModel.error_source = ex.Source.ToString();

        //        return _ResponseModel;
        //    }
        //}
        //#endregion

        #region Hr_Score_Part1
        [Route("api/Hr_Score_Part1")]
        [HttpPost]
        public ResponseModel Hr_Score_Part1([FromBody] Score_Answer_1_Model Score_Answer_1_Model)
        {

            try
            {
                CultureInfo cultureinfo = new CultureInfo("en-US");

                HrRepository HrRepository = new HrRepository();

                List<Score_Answer_1_Model> Hr_Score_Part1 = HrRepository.Hr_Score_Part1(Score_Answer_1_Model);

                ResponseModel _ResponseModel = new ResponseModel();

                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.data = Hr_Score_Part1;
                _ResponseModel.length = Hr_Score_Part1.Count();
                _ResponseModel.status = "Success";

                return _ResponseModel;

            }
            catch (Exception ex)
            {

                ResponseModel _ResponseModel = new ResponseModel();
                _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
                _ResponseModel.status = "Error";
                _ResponseModel.error_message = ex.Message.ToString();
                _ResponseModel.error_stacktrace = ex.StackTrace.ToString();
                _ResponseModel.error_source = ex.Source.ToString();

                return _ResponseModel;
            }

        }
        #endregion

      

        //[Route("api/Hr_Time_Create")]
        //[HttpPost]
        //public ResponseModel AllInone(List<TimeModel> TimeListModel,  TimeModel TimeModel)
        //{
        //    ResponseModel _ResponseModel = new ResponseModel();

        //    Hr_Time_Create(TimeListModel);

        //    Hr_Time_Get(TimeModel);

        //    _ResponseModel.result_datetime = DateTime.Now.ToString("yyyy-MM-dd hh:mm");
        //    _ResponseModel.status = "Success";

        //    return _ResponseModel;

        //}

    }
}
