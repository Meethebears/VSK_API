using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;

using Dapper;
using MySql.Data.MySqlClient;
using REPO.Models;

namespace REPO.Controllers
{
    public class BrRepository
    {

        #region Connection_SQL Server
        //-------------------Start Connection_SQL ------------------------//
 
        public SqlConnection mscon;

        private void Connection()
        {
           
            string msconstr = ConfigurationManager.ConnectionStrings["VSK_BR"].ToString();
            mscon = new SqlConnection(msconstr);
        }

        //-------------------End Connection_SQL ------------------------//
        #endregion



        #region Br_Brtra_Job
        public List<BrModel> Br_Brtra_Job(BrModel BrModel)
        {
            try
            {

                DynamicParameters objParam = new DynamicParameters();

                //string cn_pre_job_datetime_start = BrModel.cn_pre_job_datetime_start == DateTime.MinValue ? null : BrModel.cn_pre_job_datetime_start.ToString("yyyy-MM-dd HH:mm");
                //string cn_pre_job_datetime_end = BrModel.cn_pre_job_datetime_end == DateTime.MinValue ? null : BrModel.cn_pre_job_datetime_end.ToString("yyyy-MM-dd HH:mm");


                objParam.Add("@brtra_number", BrModel.brtra_number);
                objParam.Add("@created_by", BrModel.created_by);
               

                Connection();
                mscon.Open();
                List<BrModel> CnVList = SqlMapper.Query<BrModel>(mscon, "SP_Brtra_Job", objParam, commandTimeout: 210, commandType: CommandType.StoredProcedure).ToList();

                mscon.Close();
                return CnVList.ToList();

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Br_Brtra_Get
        public List<BrModel> Br_Brtra_Get(BrModel BrModel)
        {
            try
            {

                DynamicParameters objParam = new DynamicParameters();


                objParam.Add("@brtra_number", BrModel.brtra_number);

                Connection();
                mscon.Open();
                List<BrModel> CnVList = SqlMapper.Query<BrModel>(mscon, "SP_Brtra_Get", objParam, commandTimeout: 210, commandType: CommandType.StoredProcedure).ToList();

                mscon.Close();
                return CnVList.ToList();

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Br_Brtra_Update
        public List<BrModel> Br_Brtra_Update(BrModel BrModel)
        {
            try
            {

                DynamicParameters objParam = new DynamicParameters();

                objParam.Add("@job_detail_qty", BrModel.job_detail_qty);
                objParam.Add("@gbarcode", BrModel.gbarcode);
                objParam.Add("@br_job_no", BrModel.br_job_no);
                objParam.Add("@updated_by", BrModel.updated_by);

                Connection();
                mscon.Open();
                List<BrModel> CnVList = SqlMapper.Query<BrModel>(mscon, "SP_Brtra_Update", objParam, commandTimeout: 210, commandType: CommandType.StoredProcedure).ToList();

                mscon.Close();
                return CnVList.ToList();

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion
    }
}