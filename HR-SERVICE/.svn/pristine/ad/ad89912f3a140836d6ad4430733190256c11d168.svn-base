using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;

using Dapper;
using MySql.Data.MySqlClient;
using REPO.Models;

namespace REPO.Controllers
{
    public class InvDBRepository
    {

        #region Connection_SQL Server
        //-------------------Start Connection_SQL ------------------------//
        public SqlConnection MIS_SERVICE;
        public SqlConnection VSK_Data;

        private void Connection()
        {
            string STR_MIS_SERVICE = ConfigurationManager.ConnectionStrings["MIS_SERVICE"].ToString();
            MIS_SERVICE = new SqlConnection(STR_MIS_SERVICE);

            string STR_VSK_Data = ConfigurationManager.ConnectionStrings["VSK_Data"].ToString();
            VSK_Data = new SqlConnection(STR_VSK_Data);
        }
        //-------------------End Connection_SQL ------------------------//
        #endregion

        #region INV_Dashbord_Onprocess_Get
        public List<InvDBModelGet> INV_Dashbord_Onprocess_Get(InvDBModelGet InvDBModelGet)
        {
            try
            {

                DynamicParameters objParam = new DynamicParameters();

                objParam.Add("@invno", InvDBModelGet.invno);
                objParam.Add("@number", InvDBModelGet.number);
                objParam.Add("@Mode", InvDBModelGet.mode);

                Connection();
                MIS_SERVICE.Open();
                List<InvDBModelGet> CnVList = SqlMapper.Query<InvDBModelGet>(MIS_SERVICE, "SP_INV_Dashbord_Onprocess_Get", objParam, commandTimeout: 210, commandType: CommandType.StoredProcedure).ToList();

                MIS_SERVICE.Close();
                return CnVList.ToList();

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion
        #region INV_Dashbord_Complete_Get
        public List<InvDBModelGet> INV_Dashbord_Complete_Get(InvDBModelGet InvDBModelGet)
        {
            try
            {

                DynamicParameters objParam = new DynamicParameters();

                objParam.Add("@invno", InvDBModelGet.invno);
                objParam.Add("@number", InvDBModelGet.number);
                objParam.Add("@Mode", InvDBModelGet.mode);

                Connection();
                MIS_SERVICE.Open();
                List<InvDBModelGet> CnVList = SqlMapper.Query<InvDBModelGet>(MIS_SERVICE, "SP_INV_Dashbord_Complete_Get", objParam, commandTimeout: 210, commandType: CommandType.StoredProcedure).ToList();

                MIS_SERVICE.Close();
                return CnVList.ToList();

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion


    }
}