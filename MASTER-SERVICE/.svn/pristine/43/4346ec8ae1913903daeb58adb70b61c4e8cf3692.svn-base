using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;

using Dapper;
using MySql.Data.MySqlClient;
using REPO.Models;

namespace REPO.Controllers
{
    public class CnRepository
    {

        #region Connection_SQL Server
        //-------------------Start Connection_SQL ------------------------//
        public MySqlConnection con;
        public SqlConnection mscon;

        private void Connection()
        {
            string myconstr = ConfigurationManager.ConnectionStrings["MySqlConn"].ToString();
            con = new MySqlConnection(myconstr);

            string msconstr = ConfigurationManager.ConnectionStrings["MsSqlConn"].ToString();
            mscon = new SqlConnection(msconstr);
        }

        //-------------------End Connection_SQL ------------------------//
        #endregion


        #region Cn_Pre_Job_Create

        public void Cn_Pre_Job_Create(CnModel CnModel)
        {
            try
            {
                DynamicParameters objParam = new DynamicParameters();
                //string Receive_date_est = PkPoIVModel.Receive_date_est == DateTime.MinValue ? null : PkPoIVModel.Receive_date_est.ToString("yyyy-MM-dd hh:mm");

                objParam.Add("@salefile_number", CnModel.salefile_number);
                objParam.Add("@salefile_invcode", CnModel.salefile_invcode);
                objParam.Add("@saletra_item_barcode", CnModel.saletra_item_barcode);
                objParam.Add("@cn_pre_job_qty", CnModel.cn_pre_job_qty);
                objParam.Add("@cn_pre_job_type", CnModel.cn_pre_job_type);
                objParam.Add("@cn_pre_job_comment", CnModel.cn_pre_job_comment);
                objParam.Add("@created_by", CnModel.created_by);
                objParam.Add("@record_status", CnModel.record_status);
                objParam.Add("@pMessage", CnModel.pMessage);

                Connection();
                mscon.Open();
                mscon.Execute("SP_Cn_Pre_Job_Create", objParam, commandType: CommandType.StoredProcedure);
                mscon.Close();

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Cn_Pre_Job_Detail_Create

        public void Cn_Pre_Job_Detail_Create(CnModel CnModel)
        {
            try
            {
                DynamicParameters objParam = new DynamicParameters();
                //string Receive_date_est = PkPoIVModel.Receive_date_est == DateTime.MinValue ? null : PkPoIVModel.Receive_date_est.ToString("yyyy-MM-dd hh:mm");

                objParam.Add("@cn_pre_job_id", CnModel.cn_pre_job_id);
                objParam.Add("@cn_pre_job_detail_assige", CnModel.cn_pre_job_detail_assige);
                objParam.Add("@cn_pre_job_detail_driver", CnModel.cn_pre_job_detail_driver);
                objParam.Add("@cn_pre_job_detail_status", CnModel.cn_pre_job_detail_status);
                objParam.Add("@cn_pre_job_detail_comment", CnModel.cn_pre_job_detail_comment);
                objParam.Add("@created_by", CnModel.created_by);
                objParam.Add("@record_status", CnModel.record_status);
                objParam.Add("@pMessage", CnModel.pMessage);
               
                Connection();
                mscon.Open();
                mscon.Execute("SP_Cn_Pre_Job_Detail_Create", objParam, commandType: CommandType.StoredProcedure);
                mscon.Close();

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Cn_Pre_Job_Get
        public List<CnModel> Cn_Pre_Job_Get(CnModel CnModel)
        {
            try
            {

                DynamicParameters objParam = new DynamicParameters();

                string cn_pre_job_datetime_start = CnModel.cn_pre_job_datetime_start == DateTime.MinValue ? null : CnModel.cn_pre_job_datetime_start.ToString("yyyy-MM-dd hh:mm");
                string cn_pre_job_datetime_end = CnModel.cn_pre_job_datetime_end == DateTime.MinValue ? null : CnModel.cn_pre_job_datetime_end.ToString("yyyy-MM-dd hh:mm");


                objParam.Add("@cn_pre_job_id", CnModel.cn_pre_job_id);
                objParam.Add("@cn_pre_job_datetime_start", cn_pre_job_datetime_start);
                objParam.Add("@cn_pre_job_datetime_end", cn_pre_job_datetime_end);
                objParam.Add("@salefile_number", CnModel.salefile_number);
                objParam.Add("@salefile_invcode", CnModel.salefile_invcode);
                objParam.Add("@saletra_item_barcode", CnModel.saletra_item_barcode);
                objParam.Add("@cn_pre_job_type", CnModel.cn_pre_job_type);
                objParam.Add("@cn_pre_job_comment", CnModel.cn_pre_job_comment);
                objParam.Add("@created_by", CnModel.created_by);
                objParam.Add("@record_status", CnModel.record_status);


                Connection();
                mscon.Open();
                List<CnModel> CnVList = SqlMapper.Query<CnModel>(mscon, "SP_Cn_Pre_Job_Get", objParam, commandTimeout: 210, commandType: CommandType.StoredProcedure).ToList();

                mscon.Close();
                return CnVList.ToList();

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Cn_Pre_Job_Detail_Get
        public List<CnModel> Cn_Pre_Job_Detail_Get(CnModel CnModel)
        {
            try
            {

                DynamicParameters objParam = new DynamicParameters();

               
                objParam.Add("@cn_pre_job_id", CnModel.cn_pre_job_id);
                objParam.Add("@record_status", CnModel.record_status);


                Connection();
                mscon.Open();
                List<CnModel> CnVList = SqlMapper.Query<CnModel>(mscon, "SP_Cn_Pre_Job_Detail_Get", objParam, commandTimeout: 210, commandType: CommandType.StoredProcedure).ToList();

                mscon.Close();
                return CnVList.ToList();

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion


    }
}